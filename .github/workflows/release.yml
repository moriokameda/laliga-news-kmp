name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - production

jobs:
  android-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          mkdir -p keystore
          echo "$ENCODED_KEYSTORE" | base64 -d > keystore/laliga-news-release.keystore
      
      - name: Build Release APK
        env:
          KEYSTORE_FILE: keystore/laliga-news-release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew :composeApp:assembleRelease
      
      - name: Build Release Bundle
        env:
          KEYSTORE_FILE: keystore/laliga-news-release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew :composeApp:bundleRelease
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: composeApp/build/outputs/apk/release/*.apk
      
      - name: Upload Bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-bundle
          path: composeApp/build/outputs/bundle/release/*.aab
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            composeApp/build/outputs/apk/release/*.apk
            composeApp/build/outputs/bundle/release/*.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Optional: Upload to Play Store
      # - name: Upload to Play Store
      #   if: github.event.inputs.release_type == 'production' || startsWith(github.ref, 'refs/tags/')
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
      #     packageName: com.laliga.news
      #     releaseFiles: composeApp/build/outputs/bundle/release/*.aab
      #     track: ${{ github.event.inputs.release_type || 'production' }}
      #     whatsNewDirectory: distribution/whatsnew

  ios-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      
      - name: Build iOS Framework
        run: ./gradlew :composeApp:assembleXCFramework
      
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project LaLigaNews.xcodeproj \
            -scheme LaLigaNews \
            -configuration Release \
            -sdk iphoneos \
            -derivedDataPath build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
      
      - name: Create IPA (unsigned)
        run: |
          cd iosApp
          mkdir -p build/ipa
          cd build/Build/Products/Release-iphoneos
          mkdir Payload
          cp -R LaLigaNews.app Payload/
          zip -r ../../../ipa/LaLigaNews-unsigned.ipa Payload
      
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-unsigned
          path: iosApp/build/ipa/*.ipa
      
      # For App Store submission, you would need:
      # - Apple Developer certificates and provisioning profiles
      # - fastlane setup for automated submission
      # - App Store Connect API key
      
      # - name: Setup Certificates
      #   uses: apple-actions/import-codesign-certs@v2
      #   with:
      #     p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
      #     p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      
      # - name: Setup Provisioning Profiles
      #   uses: apple-actions/download-provisioning-profiles@v1
      #   with:
      #     bundle-id: com.laliga.news
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      
      # - name: Build and Archive
      #   run: |
      #     cd iosApp
      #     xcodebuild archive \
      #       -project LaLigaNews.xcodeproj \
      #       -scheme LaLigaNews \
      #       -configuration Release \
      #       -archivePath build/LaLigaNews.xcarchive
      
      # - name: Export IPA
      #   run: |
      #     cd iosApp
      #     xcodebuild -exportArchive \
      #       -archivePath build/LaLigaNews.xcarchive \
      #       -exportPath build/ipa \
      #       -exportOptionsPlist ExportOptions.plist
      
      # - name: Upload to App Store
      #   if: github.event.inputs.release_type == 'production' || startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     xcrun altool --upload-app \
      #       -f iosApp/build/ipa/LaLigaNews.ipa \
      #       -t ios \
      #       -u ${{ secrets.APPLE_ID }} \
      #       -p ${{ secrets.APP_SPECIFIC_PASSWORD }}